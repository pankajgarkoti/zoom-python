# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom.  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20044Summaries(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'meeting_host_id': 'str',
        'meeting_host_email': 'str',
        'meeting_uuid': 'str',
        'meeting_id': 'int',
        'meeting_topic': 'str',
        'meeting_start_time': 'datetime',
        'meeting_end_time': 'datetime',
        'summary_start_time': 'datetime',
        'summary_end_time': 'datetime',
        'summary_created_time': 'datetime',
        'summary_last_modified_time': 'datetime'
    }

    attribute_map = {
        'meeting_host_id': 'meeting_host_id',
        'meeting_host_email': 'meeting_host_email',
        'meeting_uuid': 'meeting_uuid',
        'meeting_id': 'meeting_id',
        'meeting_topic': 'meeting_topic',
        'meeting_start_time': 'meeting_start_time',
        'meeting_end_time': 'meeting_end_time',
        'summary_start_time': 'summary_start_time',
        'summary_end_time': 'summary_end_time',
        'summary_created_time': 'summary_created_time',
        'summary_last_modified_time': 'summary_last_modified_time'
    }

    def __init__(self, meeting_host_id=None, meeting_host_email=None, meeting_uuid=None, meeting_id=None, meeting_topic=None, meeting_start_time=None, meeting_end_time=None, summary_start_time=None, summary_end_time=None, summary_created_time=None, summary_last_modified_time=None):  # noqa: E501
        """InlineResponse20044Summaries - a model defined in Swagger"""  # noqa: E501
        self._meeting_host_id = None
        self._meeting_host_email = None
        self._meeting_uuid = None
        self._meeting_id = None
        self._meeting_topic = None
        self._meeting_start_time = None
        self._meeting_end_time = None
        self._summary_start_time = None
        self._summary_end_time = None
        self._summary_created_time = None
        self._summary_last_modified_time = None
        self.discriminator = None
        if meeting_host_id is not None:
            self.meeting_host_id = meeting_host_id
        if meeting_host_email is not None:
            self.meeting_host_email = meeting_host_email
        if meeting_uuid is not None:
            self.meeting_uuid = meeting_uuid
        if meeting_id is not None:
            self.meeting_id = meeting_id
        if meeting_topic is not None:
            self.meeting_topic = meeting_topic
        if meeting_start_time is not None:
            self.meeting_start_time = meeting_start_time
        if meeting_end_time is not None:
            self.meeting_end_time = meeting_end_time
        if summary_start_time is not None:
            self.summary_start_time = summary_start_time
        if summary_end_time is not None:
            self.summary_end_time = summary_end_time
        if summary_created_time is not None:
            self.summary_created_time = summary_created_time
        if summary_last_modified_time is not None:
            self.summary_last_modified_time = summary_last_modified_time

    @property
    def meeting_host_id(self):
        """Gets the meeting_host_id of this InlineResponse20044Summaries.  # noqa: E501

        The ID of the user who is set as the meeting host.  # noqa: E501

        :return: The meeting_host_id of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: str
        """
        return self._meeting_host_id

    @meeting_host_id.setter
    def meeting_host_id(self, meeting_host_id):
        """Sets the meeting_host_id of this InlineResponse20044Summaries.

        The ID of the user who is set as the meeting host.  # noqa: E501

        :param meeting_host_id: The meeting_host_id of this InlineResponse20044Summaries.  # noqa: E501
        :type: str
        """

        self._meeting_host_id = meeting_host_id

    @property
    def meeting_host_email(self):
        """Gets the meeting_host_email of this InlineResponse20044Summaries.  # noqa: E501

        The meeting host's email address.  # noqa: E501

        :return: The meeting_host_email of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: str
        """
        return self._meeting_host_email

    @meeting_host_email.setter
    def meeting_host_email(self, meeting_host_email):
        """Sets the meeting_host_email of this InlineResponse20044Summaries.

        The meeting host's email address.  # noqa: E501

        :param meeting_host_email: The meeting_host_email of this InlineResponse20044Summaries.  # noqa: E501
        :type: str
        """

        self._meeting_host_email = meeting_host_email

    @property
    def meeting_uuid(self):
        """Gets the meeting_uuid of this InlineResponse20044Summaries.  # noqa: E501

        Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.   # noqa: E501

        :return: The meeting_uuid of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: str
        """
        return self._meeting_uuid

    @meeting_uuid.setter
    def meeting_uuid(self, meeting_uuid):
        """Sets the meeting_uuid of this InlineResponse20044Summaries.

        Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.   # noqa: E501

        :param meeting_uuid: The meeting_uuid of this InlineResponse20044Summaries.  # noqa: E501
        :type: str
        """

        self._meeting_uuid = meeting_uuid

    @property
    def meeting_id(self):
        """Gets the meeting_id of this InlineResponse20044Summaries.  # noqa: E501

        [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON, also known as the meeting number.  # noqa: E501

        :return: The meeting_id of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: int
        """
        return self._meeting_id

    @meeting_id.setter
    def meeting_id(self, meeting_id):
        """Sets the meeting_id of this InlineResponse20044Summaries.

        [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON, also known as the meeting number.  # noqa: E501

        :param meeting_id: The meeting_id of this InlineResponse20044Summaries.  # noqa: E501
        :type: int
        """

        self._meeting_id = meeting_id

    @property
    def meeting_topic(self):
        """Gets the meeting_topic of this InlineResponse20044Summaries.  # noqa: E501

        Meeting topic.  # noqa: E501

        :return: The meeting_topic of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: str
        """
        return self._meeting_topic

    @meeting_topic.setter
    def meeting_topic(self, meeting_topic):
        """Sets the meeting_topic of this InlineResponse20044Summaries.

        Meeting topic.  # noqa: E501

        :param meeting_topic: The meeting_topic of this InlineResponse20044Summaries.  # noqa: E501
        :type: str
        """

        self._meeting_topic = meeting_topic

    @property
    def meeting_start_time(self):
        """Gets the meeting_start_time of this InlineResponse20044Summaries.  # noqa: E501

        The meeting's start date and time.  # noqa: E501

        :return: The meeting_start_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._meeting_start_time

    @meeting_start_time.setter
    def meeting_start_time(self, meeting_start_time):
        """Sets the meeting_start_time of this InlineResponse20044Summaries.

        The meeting's start date and time.  # noqa: E501

        :param meeting_start_time: The meeting_start_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._meeting_start_time = meeting_start_time

    @property
    def meeting_end_time(self):
        """Gets the meeting_end_time of this InlineResponse20044Summaries.  # noqa: E501

        The meeting's end date and time.  # noqa: E501

        :return: The meeting_end_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._meeting_end_time

    @meeting_end_time.setter
    def meeting_end_time(self, meeting_end_time):
        """Sets the meeting_end_time of this InlineResponse20044Summaries.

        The meeting's end date and time.  # noqa: E501

        :param meeting_end_time: The meeting_end_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._meeting_end_time = meeting_end_time

    @property
    def summary_start_time(self):
        """Gets the summary_start_time of this InlineResponse20044Summaries.  # noqa: E501

        The summary's start date and time.  # noqa: E501

        :return: The summary_start_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._summary_start_time

    @summary_start_time.setter
    def summary_start_time(self, summary_start_time):
        """Sets the summary_start_time of this InlineResponse20044Summaries.

        The summary's start date and time.  # noqa: E501

        :param summary_start_time: The summary_start_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._summary_start_time = summary_start_time

    @property
    def summary_end_time(self):
        """Gets the summary_end_time of this InlineResponse20044Summaries.  # noqa: E501

        The summary's end date and time.  # noqa: E501

        :return: The summary_end_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._summary_end_time

    @summary_end_time.setter
    def summary_end_time(self, summary_end_time):
        """Sets the summary_end_time of this InlineResponse20044Summaries.

        The summary's end date and time.  # noqa: E501

        :param summary_end_time: The summary_end_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._summary_end_time = summary_end_time

    @property
    def summary_created_time(self):
        """Gets the summary_created_time of this InlineResponse20044Summaries.  # noqa: E501

        The date and time at which the meeting summary was created.  # noqa: E501

        :return: The summary_created_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._summary_created_time

    @summary_created_time.setter
    def summary_created_time(self, summary_created_time):
        """Sets the summary_created_time of this InlineResponse20044Summaries.

        The date and time at which the meeting summary was created.  # noqa: E501

        :param summary_created_time: The summary_created_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._summary_created_time = summary_created_time

    @property
    def summary_last_modified_time(self):
        """Gets the summary_last_modified_time of this InlineResponse20044Summaries.  # noqa: E501

        The date and time at which the meeting summary was last modified.  # noqa: E501

        :return: The summary_last_modified_time of this InlineResponse20044Summaries.  # noqa: E501
        :rtype: datetime
        """
        return self._summary_last_modified_time

    @summary_last_modified_time.setter
    def summary_last_modified_time(self, summary_last_modified_time):
        """Sets the summary_last_modified_time of this InlineResponse20044Summaries.

        The date and time at which the meeting summary was last modified.  # noqa: E501

        :param summary_last_modified_time: The summary_last_modified_time of this InlineResponse20044Summaries.  # noqa: E501
        :type: datetime
        """

        self._summary_last_modified_time = summary_last_modified_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20044Summaries, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20044Summaries):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
