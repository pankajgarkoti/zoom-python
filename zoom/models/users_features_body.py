# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom.  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UsersFeaturesBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'feature_type': 'str',
        'feature_value': 'str',
        'users': 'list[UsersfeaturesUsers]'
    }

    attribute_map = {
        'feature_type': 'feature_type',
        'feature_value': 'feature_value',
        'users': 'users'
    }

    def __init__(self, feature_type=None, feature_value=None, users=None):  # noqa: E501
        """UsersFeaturesBody - a model defined in Swagger"""  # noqa: E501
        self._feature_type = None
        self._feature_value = None
        self._users = None
        self.discriminator = None
        self.feature_type = feature_type
        self.feature_value = feature_value
        self.users = users

    @property
    def feature_type(self):
        """Gets the feature_type of this UsersFeaturesBody.  # noqa: E501

        The feature type to update.  # noqa: E501

        :return: The feature_type of this UsersFeaturesBody.  # noqa: E501
        :rtype: str
        """
        return self._feature_type

    @feature_type.setter
    def feature_type(self, feature_type):
        """Sets the feature_type of this UsersFeaturesBody.

        The feature type to update.  # noqa: E501

        :param feature_type: The feature_type of this UsersFeaturesBody.  # noqa: E501
        :type: str
        """
        if feature_type is None:
            raise ValueError("Invalid value for `feature_type`, must not be `None`")  # noqa: E501
        allowed_values = ["user_type", "concurrent_meeting", "large_meeting", "webinar", "zoom_events", "zoom_iq_for_sales", "zoom_whiteboard", "plan_united_type", "zoom_one_type"]  # noqa: E501
        if feature_type not in allowed_values:
            raise ValueError(
                "Invalid value for `feature_type` ({0}), must be one of {1}"  # noqa: E501
                .format(feature_type, allowed_values)
            )

        self._feature_type = feature_type

    @property
    def feature_value(self):
        """Gets the feature_value of this UsersFeaturesBody.  # noqa: E501

        The feature value you want to update. The value you can pass depends on the 'feature_type' field.   **user_type:**  * `1` - Basic  * `2` - Licensed  * `99` - None (this can only be set with `ssoCreate`).   **concurrent_meeting:**  * `Basic`  * `Plus`  * `None`.   **large_meeting:**  * `1` - 100 capacity  * `32` - 200 capacity * `64` - 300 capacity * `128` - 500 capacity * `256` - 1000 capacity  * `0` - Turn off the **Large meeting** feature.   **webinar:**  * `16` - 100 capacity  * `1` - 500 capacity  * `64` - 1000 capacity  * `128` - 3000 capacity * `256` - 5000 capacity  * `512` - 10000 capacity  * `1024` - 20000 capacity  * `2048` - 30000 capacity  * `4096` - 40000 capacity  * `8192` - 50000 capacity  * `16384` - promo 500 capacity  * `32768` - promo 1000 capacity  * `0` - Turn off the **Webinar** feature.   **zoom_events:**  * `500` - 500 capacity  * `1000` - 1000 capacity  * `3000` - 3000 capacity  * `5000` - 5000 capacity  * `10000` - 10000 capacity  * `20000` - 20000 capacity  * `30000` - 30000 capacity  * `50000` - 50000 capacity  * `0` - Turn off the **Zoom events** feature.   **zoom_iq_for_sales:**  * `true` - Turn on the **Zoom IQ** feature.  * `false` - Turn off the **Zoom IQ** feature.   **zoom_whiteboard:**  * `true` - Turn on the **Zoom whiteboard** feature.  * `false` - Turn off the **Zoom whiteboard** feature.   **plan_united_type:**  * `1` - Zoom United Pro-United with US/CA Unlimited.  * `2` - Zoom United Pro-United with UK/IR Unlimited.  * `4` - Zoom United Pro-United with AU/NZ Unlimited.  * `8` - Zoom United Pro-United with Global Select.  * `16` -  Zoom United Pro-United with Zoom Phone Pro.  * `32` - Zoom United Biz-United with US/CA Unlimited.  * `64` - Zoom United Biz-United with UK/IR Unlimited.  * `128` - Zoom United Biz-United with AU/NZ Unlimited.  * `256` - Zoom United Biz-United with Global Select.  * `512` -  Zoom United Biz-United with Zoom Phone Pro.  * `1024` - Zoom United Ent-United with US/CA Unlimited.  * `2048` - Zoom United Ent-United with UK/IR Unlimited.  * `4096` - Zoom United Ent-United with AU/NZ Unlimited.  * `8192` - Zoom United Ent-United with Global Select.  * `16384` -  Zoom United Ent-United with Zoom Phone Pro.  * `32768` - Zoom United Pro-United with JP Unlimited.  * `65536` - Zoom United Biz-United with JP Unlimited.  * `131072` - Zoom United Ent-United with JP Unlimited.  * `0` - Turn off the **Zoom united** feature.   **zoom_one_type:**  * `16` - Zoom One Business Plus with US/CA Unlimited.  * `32` - Zoom One Business Plus with UK/IR Unlimited.  * `64` - Zoom One Business Plus with AU/NZ Unlimited.  * `128` - Zoom One Business Plus with Japan Unlimited.  * `33554432` - Zoom One Business Plus with Global Select.  * `134217728` - Zoom One Enterprise Premier with US/CA Unlimited.  * `1073741824` - Zoom One Enterprise Premier with AU/NZ Unlimited.  * `536870912` - Zoom One Enterprise Premier with UK/IR Unlimited.  * `268435456` - Zoom One Enterprise Premier with Japan Unlimited.  * `0` - Turn off the **Zoom one** feature.   For Gov accounts:  * `16` - Zoom One Business Plus.  * `0` - Turn off the **Zoom one** feature.   For Education accounts:  * `18014398509481984` - Zoom One for Education School and Campus.  * `72057594037927936` - Zoom One for Education Enterprise Essentials.  * `576460752303423488` - Zoom One for Education Enterprise Student.  * `144115188075855872` - Zoom One for Education Enterprise Plus.  * `137438953472` - Zoom One for Education School and Campus Plus with US/CA Unlimited.  * `1099511627776` -Zoom One for Education School and Campus Plus with AU/NZ Unlimited.  * `549755813888` - Zoom One for Education School and Campus Plus with UK/IR Unlimited.  * `274877906944` - Zoom One for Education School and Campus Plus with Japan Unlimited.  * `2199023255552` - Zoom One for Education School and Campus Plus with Global Select.  * `4294967296` - Zoom One for Education Enterprise Premier with US/CA Unlimited.  * `34359738368` - Zoom One for Education Enterprise Premier with AU/NZ Unlimited.  * `17179869184` -Zoom One for Education Enterprise Premier with UK/IR Unlimited.  * `8589934592` - Zoom One for Education Enterprise Premier with with Japan Unlimited.  * `68719476736` - Zoom One for Education Enterprise Premier with Global Select.  * `0` - Turn off the **Zoom one** feature.  # noqa: E501

        :return: The feature_value of this UsersFeaturesBody.  # noqa: E501
        :rtype: str
        """
        return self._feature_value

    @feature_value.setter
    def feature_value(self, feature_value):
        """Sets the feature_value of this UsersFeaturesBody.

        The feature value you want to update. The value you can pass depends on the 'feature_type' field.   **user_type:**  * `1` - Basic  * `2` - Licensed  * `99` - None (this can only be set with `ssoCreate`).   **concurrent_meeting:**  * `Basic`  * `Plus`  * `None`.   **large_meeting:**  * `1` - 100 capacity  * `32` - 200 capacity * `64` - 300 capacity * `128` - 500 capacity * `256` - 1000 capacity  * `0` - Turn off the **Large meeting** feature.   **webinar:**  * `16` - 100 capacity  * `1` - 500 capacity  * `64` - 1000 capacity  * `128` - 3000 capacity * `256` - 5000 capacity  * `512` - 10000 capacity  * `1024` - 20000 capacity  * `2048` - 30000 capacity  * `4096` - 40000 capacity  * `8192` - 50000 capacity  * `16384` - promo 500 capacity  * `32768` - promo 1000 capacity  * `0` - Turn off the **Webinar** feature.   **zoom_events:**  * `500` - 500 capacity  * `1000` - 1000 capacity  * `3000` - 3000 capacity  * `5000` - 5000 capacity  * `10000` - 10000 capacity  * `20000` - 20000 capacity  * `30000` - 30000 capacity  * `50000` - 50000 capacity  * `0` - Turn off the **Zoom events** feature.   **zoom_iq_for_sales:**  * `true` - Turn on the **Zoom IQ** feature.  * `false` - Turn off the **Zoom IQ** feature.   **zoom_whiteboard:**  * `true` - Turn on the **Zoom whiteboard** feature.  * `false` - Turn off the **Zoom whiteboard** feature.   **plan_united_type:**  * `1` - Zoom United Pro-United with US/CA Unlimited.  * `2` - Zoom United Pro-United with UK/IR Unlimited.  * `4` - Zoom United Pro-United with AU/NZ Unlimited.  * `8` - Zoom United Pro-United with Global Select.  * `16` -  Zoom United Pro-United with Zoom Phone Pro.  * `32` - Zoom United Biz-United with US/CA Unlimited.  * `64` - Zoom United Biz-United with UK/IR Unlimited.  * `128` - Zoom United Biz-United with AU/NZ Unlimited.  * `256` - Zoom United Biz-United with Global Select.  * `512` -  Zoom United Biz-United with Zoom Phone Pro.  * `1024` - Zoom United Ent-United with US/CA Unlimited.  * `2048` - Zoom United Ent-United with UK/IR Unlimited.  * `4096` - Zoom United Ent-United with AU/NZ Unlimited.  * `8192` - Zoom United Ent-United with Global Select.  * `16384` -  Zoom United Ent-United with Zoom Phone Pro.  * `32768` - Zoom United Pro-United with JP Unlimited.  * `65536` - Zoom United Biz-United with JP Unlimited.  * `131072` - Zoom United Ent-United with JP Unlimited.  * `0` - Turn off the **Zoom united** feature.   **zoom_one_type:**  * `16` - Zoom One Business Plus with US/CA Unlimited.  * `32` - Zoom One Business Plus with UK/IR Unlimited.  * `64` - Zoom One Business Plus with AU/NZ Unlimited.  * `128` - Zoom One Business Plus with Japan Unlimited.  * `33554432` - Zoom One Business Plus with Global Select.  * `134217728` - Zoom One Enterprise Premier with US/CA Unlimited.  * `1073741824` - Zoom One Enterprise Premier with AU/NZ Unlimited.  * `536870912` - Zoom One Enterprise Premier with UK/IR Unlimited.  * `268435456` - Zoom One Enterprise Premier with Japan Unlimited.  * `0` - Turn off the **Zoom one** feature.   For Gov accounts:  * `16` - Zoom One Business Plus.  * `0` - Turn off the **Zoom one** feature.   For Education accounts:  * `18014398509481984` - Zoom One for Education School and Campus.  * `72057594037927936` - Zoom One for Education Enterprise Essentials.  * `576460752303423488` - Zoom One for Education Enterprise Student.  * `144115188075855872` - Zoom One for Education Enterprise Plus.  * `137438953472` - Zoom One for Education School and Campus Plus with US/CA Unlimited.  * `1099511627776` -Zoom One for Education School and Campus Plus with AU/NZ Unlimited.  * `549755813888` - Zoom One for Education School and Campus Plus with UK/IR Unlimited.  * `274877906944` - Zoom One for Education School and Campus Plus with Japan Unlimited.  * `2199023255552` - Zoom One for Education School and Campus Plus with Global Select.  * `4294967296` - Zoom One for Education Enterprise Premier with US/CA Unlimited.  * `34359738368` - Zoom One for Education Enterprise Premier with AU/NZ Unlimited.  * `17179869184` -Zoom One for Education Enterprise Premier with UK/IR Unlimited.  * `8589934592` - Zoom One for Education Enterprise Premier with with Japan Unlimited.  * `68719476736` - Zoom One for Education Enterprise Premier with Global Select.  * `0` - Turn off the **Zoom one** feature.  # noqa: E501

        :param feature_value: The feature_value of this UsersFeaturesBody.  # noqa: E501
        :type: str
        """
        if feature_value is None:
            raise ValueError("Invalid value for `feature_value`, must not be `None`")  # noqa: E501

        self._feature_value = feature_value

    @property
    def users(self):
        """Gets the users of this UsersFeaturesBody.  # noqa: E501

        The users' info you want to update.  # noqa: E501

        :return: The users of this UsersFeaturesBody.  # noqa: E501
        :rtype: list[UsersfeaturesUsers]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this UsersFeaturesBody.

        The users' info you want to update.  # noqa: E501

        :param users: The users of this UsersFeaturesBody.  # noqa: E501
        :type: list[UsersfeaturesUsers]
        """
        if users is None:
            raise ValueError("Invalid value for `users`, must not be `None`")  # noqa: E501

        self._users = users

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UsersFeaturesBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UsersFeaturesBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
